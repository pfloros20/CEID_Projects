/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.awt.Color;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultListModel;
/**
 *
 * @author panos
 */
public class GuestAPI extends javax.swing.JFrame {

    /**
     * Creates new form GuestAPI
     */
    Connection conn=null;
    Statement stmt=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    
    public GuestAPI() {
        initComponents();
        this.setLocationRelativeTo(null);
        ProductList.setModel(new DefaultListModel());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SignUpDialog = new javax.swing.JDialog();
        SignUpLabel = new javax.swing.JLabel();
        NameLabel = new javax.swing.JLabel();
        NameText = new javax.swing.JTextField();
        SurNameLabel = new javax.swing.JLabel();
        SurnameText = new javax.swing.JTextField();
        EmailLabel = new javax.swing.JLabel();
        EmailText = new javax.swing.JTextField();
        PhoneLabel = new javax.swing.JLabel();
        PhoneText = new javax.swing.JTextField();
        OKButton = new javax.swing.JButton();
        CategoriesPanel = new javax.swing.JPanel();
        CategoryLabel = new javax.swing.JLabel();
        jSeparator = new javax.swing.JSeparator();
        CPUButton = new javax.swing.JButton();
        MOBOButton = new javax.swing.JButton();
        GPUButton = new javax.swing.JButton();
        PSUButton = new javax.swing.JButton();
        RAMButton = new javax.swing.JButton();
        CASEButton = new javax.swing.JButton();
        SSDButton = new javax.swing.JButton();
        HDDButton = new javax.swing.JButton();
        EXTHDButton = new javax.swing.JButton();
        SignUpButton = new javax.swing.JButton();
        TitlePanel = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductList = new javax.swing.JList<>();

        SignUpDialog.setTitle("Sign Up!");
        SignUpDialog.setMinimumSize(new java.awt.Dimension(368, 254));
        SignUpDialog.setResizable(false);

        SignUpLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        SignUpLabel.setText("Sign up Form");

        NameLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        NameLabel.setText("Name:");

        SurNameLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        SurNameLabel.setText("Surname:");

        EmailLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        EmailLabel.setText("Email:");

        PhoneLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        PhoneLabel.setText("Phone:");

        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SignUpDialogLayout = new javax.swing.GroupLayout(SignUpDialog.getContentPane());
        SignUpDialog.getContentPane().setLayout(SignUpDialogLayout);
        SignUpDialogLayout.setHorizontalGroup(
            SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUpDialogLayout.createSequentialGroup()
                .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignUpDialogLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(SignUpDialogLayout.createSequentialGroup()
                                .addComponent(NameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SignUpDialogLayout.createSequentialGroup()
                                .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(SignUpDialogLayout.createSequentialGroup()
                                        .addComponent(SurNameLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SurnameText, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignUpDialogLayout.createSequentialGroup()
                                        .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(PhoneLabel)
                                            .addComponent(EmailLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(OKButton)
                                            .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(EmailText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(PhoneText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(SignUpDialogLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(SignUpLabel)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        SignUpDialogLayout.setVerticalGroup(
            SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUpDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SignUpLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SurNameLabel)
                    .addComponent(SurnameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailLabel)
                    .addComponent(EmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUpDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PhoneLabel)
                    .addComponent(PhoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(OKButton)
                .addGap(55, 55, 55))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Eshop");
        setBackground(new java.awt.Color(255, 255, 204));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CategoriesPanel.setBackground(new java.awt.Color(51, 153, 255));
        CategoriesPanel.setAlignmentX(0.0F);
        CategoriesPanel.setAlignmentY(0.0F);

        CategoryLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        CategoryLabel.setText("Categories");

        CPUButton.setBackground(new java.awt.Color(51, 153, 255));
        CPUButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        CPUButton.setText("CPU");
        CPUButton.setAlignmentY(0.0F);
        CPUButton.setBorder(null);
        CPUButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CPUButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        CPUButton.setFocusable(false);
        CPUButton.setRequestFocusEnabled(false);
        CPUButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CPUButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CPUButtonMouseEntered(evt);
            }
        });
        CPUButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CPUButtonActionPerformed(evt);
            }
        });

        MOBOButton.setBackground(new java.awt.Color(51, 153, 255));
        MOBOButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        MOBOButton.setText("MotherBoard");
        MOBOButton.setAlignmentY(0.0F);
        MOBOButton.setBorder(null);
        MOBOButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MOBOButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        MOBOButton.setFocusable(false);
        MOBOButton.setRequestFocusEnabled(false);
        MOBOButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MOBOButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MOBOButtonMouseEntered(evt);
            }
        });
        MOBOButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MOBOButtonActionPerformed(evt);
            }
        });

        GPUButton.setBackground(new java.awt.Color(51, 153, 255));
        GPUButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        GPUButton.setText("GPU");
        GPUButton.setAlignmentY(0.0F);
        GPUButton.setBorder(null);
        GPUButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        GPUButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        GPUButton.setFocusable(false);
        GPUButton.setRequestFocusEnabled(false);
        GPUButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                GPUButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GPUButtonMouseEntered(evt);
            }
        });
        GPUButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GPUButtonActionPerformed(evt);
            }
        });

        PSUButton.setBackground(new java.awt.Color(51, 153, 255));
        PSUButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        PSUButton.setText("PSU");
        PSUButton.setAlignmentY(0.0F);
        PSUButton.setBorder(null);
        PSUButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PSUButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        PSUButton.setFocusable(false);
        PSUButton.setRequestFocusEnabled(false);
        PSUButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PSUButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PSUButtonMouseEntered(evt);
            }
        });
        PSUButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PSUButtonActionPerformed(evt);
            }
        });

        RAMButton.setBackground(new java.awt.Color(51, 153, 255));
        RAMButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RAMButton.setText("RAM");
        RAMButton.setAlignmentY(0.0F);
        RAMButton.setBorder(null);
        RAMButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        RAMButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        RAMButton.setFocusable(false);
        RAMButton.setRequestFocusEnabled(false);
        RAMButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RAMButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RAMButtonMouseEntered(evt);
            }
        });
        RAMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RAMButtonActionPerformed(evt);
            }
        });

        CASEButton.setBackground(new java.awt.Color(51, 153, 255));
        CASEButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        CASEButton.setText("CASE");
        CASEButton.setAlignmentY(0.0F);
        CASEButton.setBorder(null);
        CASEButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CASEButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        CASEButton.setFocusable(false);
        CASEButton.setRequestFocusEnabled(false);
        CASEButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CASEButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CASEButtonMouseEntered(evt);
            }
        });
        CASEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CASEButtonActionPerformed(evt);
            }
        });

        SSDButton.setBackground(new java.awt.Color(51, 153, 255));
        SSDButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        SSDButton.setText("SSD");
        SSDButton.setAlignmentY(0.0F);
        SSDButton.setBorder(null);
        SSDButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SSDButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        SSDButton.setFocusable(false);
        SSDButton.setRequestFocusEnabled(false);
        SSDButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SSDButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SSDButtonMouseEntered(evt);
            }
        });
        SSDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSDButtonActionPerformed(evt);
            }
        });

        HDDButton.setBackground(new java.awt.Color(51, 153, 255));
        HDDButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        HDDButton.setText("HDD");
        HDDButton.setAlignmentY(0.0F);
        HDDButton.setBorder(null);
        HDDButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        HDDButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        HDDButton.setFocusable(false);
        HDDButton.setRequestFocusEnabled(false);
        HDDButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HDDButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HDDButtonMouseEntered(evt);
            }
        });
        HDDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HDDButtonActionPerformed(evt);
            }
        });

        EXTHDButton.setBackground(new java.awt.Color(51, 153, 255));
        EXTHDButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        EXTHDButton.setText("extHD");
        EXTHDButton.setAlignmentY(0.0F);
        EXTHDButton.setBorder(null);
        EXTHDButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        EXTHDButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        EXTHDButton.setFocusable(false);
        EXTHDButton.setRequestFocusEnabled(false);
        EXTHDButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EXTHDButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EXTHDButtonMouseEntered(evt);
            }
        });
        EXTHDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXTHDButtonActionPerformed(evt);
            }
        });

        SignUpButton.setBackground(new java.awt.Color(51, 153, 255));
        SignUpButton.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        SignUpButton.setText("Sign-up");
        SignUpButton.setAlignmentY(0.0F);
        SignUpButton.setBorder(null);
        SignUpButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SignUpButton.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        SignUpButton.setFocusable(false);
        SignUpButton.setRequestFocusEnabled(false);
        SignUpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SignUpButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SignUpButtonMouseEntered(evt);
            }
        });
        SignUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CategoriesPanelLayout = new javax.swing.GroupLayout(CategoriesPanel);
        CategoriesPanel.setLayout(CategoriesPanelLayout);
        CategoriesPanelLayout.setHorizontalGroup(
            CategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoriesPanelLayout.createSequentialGroup()
                .addGroup(CategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(CategoriesPanelLayout.createSequentialGroup()
                            .addGap(81, 81, 81)
                            .addComponent(CategoryLabel))
                        .addComponent(CPUButton, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addComponent(jSeparator)
                        .addComponent(MOBOButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GPUButton, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addComponent(PSUButton, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addComponent(SSDButton, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addComponent(HDDButton, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addComponent(EXTHDButton, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addComponent(SignUpButton, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                    .addComponent(RAMButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CASEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CategoriesPanelLayout.setVerticalGroup(
            CategoriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CategoriesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CategoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(CPUButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MOBOButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GPUButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PSUButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RAMButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CASEButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SSDButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HDDButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EXTHDButton)
                .addGap(47, 47, 47)
                .addComponent(SignUpButton)
                .addContainerGap(419, Short.MAX_VALUE))
        );

        getContentPane().add(CategoriesPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 830));

        TitlePanel.setBackground(new java.awt.Color(255, 255, 153));
        TitlePanel.setAlignmentX(0.0F);
        TitlePanel.setAlignmentY(0.0F);

        TitleLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        TitleLabel.setText("Eshop Guest API");

        javax.swing.GroupLayout TitlePanelLayout = new javax.swing.GroupLayout(TitlePanel);
        TitlePanel.setLayout(TitlePanelLayout);
        TitlePanelLayout.setHorizontalGroup(
            TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TitlePanelLayout.createSequentialGroup()
                .addContainerGap(174, Short.MAX_VALUE)
                .addComponent(TitleLabel)
                .addGap(189, 189, 189))
        );
        TitlePanelLayout.setVerticalGroup(
            TitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLabel)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(TitlePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 0, 530, 50));

        ProductList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(ProductList);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 500, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CPUButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CPUButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT cpu_company,cpu_model,cpu_price FROM `CPU`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("cpu_company")+" "+rs.getString("cpu_model")+"    "+rs.getString("cpu_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_CPUButtonActionPerformed

    private void CPUButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CPUButtonMouseExited
        // TODO add your handling code here:
        CPUButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_CPUButtonMouseExited

    private void CPUButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CPUButtonMouseEntered
        // TODO add your handling code here:
        CPUButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_CPUButtonMouseEntered

    private void MOBOButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MOBOButtonMouseExited
        // TODO add your handling code here:
        MOBOButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_MOBOButtonMouseExited

    private void MOBOButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MOBOButtonMouseEntered
        // TODO add your handling code here:
        MOBOButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_MOBOButtonMouseEntered

    private void MOBOButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MOBOButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT mobo_company,mobo_model,mobo_price FROM `MOTHERBOARD`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("mobo_company")+" "+rs.getString("mobo_model")+"    "+rs.getString("mobo_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_MOBOButtonActionPerformed

    private void GPUButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GPUButtonMouseExited
        // TODO add your handling code here:
        GPUButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_GPUButtonMouseExited

    private void GPUButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GPUButtonMouseEntered
        // TODO add your handling code here:
         GPUButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_GPUButtonMouseEntered

    private void GPUButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GPUButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT gpu_supplier,gpu_company,gpu_model,gpu_price FROM `GPU`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("gpu_supplier")+" "+rs.getString("gpu_company")+" "+rs.getString("gpu_model")+"    "+rs.getString("gpu_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_GPUButtonActionPerformed

    private void PSUButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PSUButtonMouseExited
        // TODO add your handling code here:
        PSUButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_PSUButtonMouseExited

    private void PSUButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PSUButtonMouseEntered
        // TODO add your handling code here:
        PSUButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_PSUButtonMouseEntered

    private void PSUButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PSUButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT psu_company,psu_model,psu_price FROM `PSU`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("psu_company")+" "+rs.getString("psu_model")+"    "+rs.getString("psu_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_PSUButtonActionPerformed

    private void RAMButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RAMButtonMouseExited
        // TODO add your handling code here:
        RAMButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_RAMButtonMouseExited

    private void RAMButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RAMButtonMouseEntered
        // TODO add your handling code here:
        RAMButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_RAMButtonMouseEntered

    private void RAMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RAMButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT ram_company,ram_model,ram_price FROM `RAM`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("ram_company")+" "+rs.getString("ram_model")+"    "+rs.getString("ram_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_RAMButtonActionPerformed

    private void CASEButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CASEButtonMouseExited
        // TODO add your handling code here:
        CASEButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_CASEButtonMouseExited

    private void CASEButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CASEButtonMouseEntered
        // TODO add your handling code here:
        CASEButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_CASEButtonMouseEntered

    private void CASEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CASEButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT case_company,case_model,case_price FROM `CASE`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("case_company")+" "+rs.getString("case_model")+"    "+rs.getString("case_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_CASEButtonActionPerformed

    private void SSDButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SSDButtonMouseExited
        // TODO add your handling code here:
        SSDButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_SSDButtonMouseExited

    private void SSDButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SSDButtonMouseEntered
        // TODO add your handling code here:
        SSDButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_SSDButtonMouseEntered

    private void SSDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSDButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT ssd_company,ssd_model,ssd_price FROM `SSD`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("ssd_company")+" "+rs.getString("ssd_model")+"    "+rs.getString("ssd_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_SSDButtonActionPerformed

    private void HDDButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HDDButtonMouseExited
        // TODO add your handling code here:
        HDDButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_HDDButtonMouseExited

    private void HDDButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HDDButtonMouseEntered
        // TODO add your handling code here:
        HDDButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_HDDButtonMouseEntered

    private void HDDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HDDButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT hdd_company,hdd_model,hdd_price FROM `HDD`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("hdd_company")+" "+rs.getString("hdd_model")+"    "+rs.getString("hdd_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_HDDButtonActionPerformed

    private void EXTHDButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EXTHDButtonMouseExited
        // TODO add your handling code here:
        EXTHDButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_EXTHDButtonMouseExited

    private void EXTHDButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EXTHDButtonMouseEntered
        // TODO add your handling code here:
        EXTHDButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_EXTHDButtonMouseEntered

    private void EXTHDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXTHDButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String query="SELECT exthd_company,exthd_model,exthd_price FROM `extHD`";
            DefaultListModel myTempList = new DefaultListModel();
            stmt=conn.createStatement();
            rs=stmt.executeQuery(query);
            while(rs.next()){
                String myTempString = rs.getString("exthd_company")+" "+rs.getString("exthd_model")+"    "+rs.getString("exthd_price");
                myTempList.addElement(myTempString);
            }
            ProductList.setModel(myTempList);
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_EXTHDButtonActionPerformed

    private void SignUpButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpButtonMouseExited
        // TODO add your handling code here:
        SignUpButton.setBackground(new java.awt.Color(51, 153, 255));
    }//GEN-LAST:event_SignUpButtonMouseExited

    private void SignUpButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SignUpButtonMouseEntered
        // TODO add your handling code here:
        SignUpButton.setBackground(new java.awt.Color(204, 255, 255));
    }//GEN-LAST:event_SignUpButtonMouseEntered

    private void SignUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpButtonActionPerformed
        // TODO add your handling code here:
        SignUpDialog.setVisible(true);
    }//GEN-LAST:event_SignUpButtonActionPerformed

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
        // TODO add your handling code here:
        try {
            conn=Test.ConnectDb();
            String name=NameText.getText();
            String surname=SurnameText.getText();
            String email=EmailText.getText();
            String phone=PhoneText.getText();
            String query="INSERT INTO `CUSTOMER`(name,surname,email,phone) VALUES ('"+name+"','"+surname+"','"+email+"','"+phone+"')";
            stmt=conn.createStatement();
            stmt.executeUpdate(query);
            SignUpDialog.dispose();
        } catch (SQLException se) {
	    //Handle errors for JDBC
	    se.printStackTrace();
	}catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_OKButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuestAPI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuestAPI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuestAPI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuestAPI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuestAPI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CASEButton;
    private javax.swing.JButton CPUButton;
    private javax.swing.JPanel CategoriesPanel;
    private javax.swing.JLabel CategoryLabel;
    private javax.swing.JButton EXTHDButton;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailText;
    private javax.swing.JButton GPUButton;
    private javax.swing.JButton HDDButton;
    private javax.swing.JButton MOBOButton;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JTextField NameText;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton PSUButton;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JTextField PhoneText;
    private javax.swing.JList<String> ProductList;
    private javax.swing.JButton RAMButton;
    private javax.swing.JButton SSDButton;
    private javax.swing.JButton SignUpButton;
    private javax.swing.JDialog SignUpDialog;
    private javax.swing.JLabel SignUpLabel;
    private javax.swing.JLabel SurNameLabel;
    private javax.swing.JTextField SurnameText;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JPanel TitlePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator;
    // End of variables declaration//GEN-END:variables
}
